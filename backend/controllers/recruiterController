const Recruiter= require('../models/RecruiterModel')
const Cv= require('../models/CvModel')
const mongoose = require("mongoose")
const jwt = require('jsonwebtoken')

const createToken = (_id) => {
    return jwt.sign({_id}, process.env.SECRET, { expiresIn: '3d' })
  }




// login a recruiter
const loginRec = async (req, res) => {
    const {email, password} = req.body
  
    try {
      const rec = await Recruiter.login(email, password)
  
      // create a token
      const token = createToken(rec._id)
      const rec_id=rec._id;
  
      res.status(200).json({email, token,rec_id})
    } catch (error) {
      res.status(400).json({error: error.message})
    }
  }



//get all Cvs

const getCvs = async (req,res)=> {
    console.log('Cv Get All');
    const cv = await Cv.find().sort({createdAt: -1});
  res.status(200).json(cv);
  }
    
  // Search in Resumes
  const searchResumes = async (req, res, next) => {
    try {
      const { query } = req.query;
      const resumes = await Cv.find({ $text: { $search: query } });
      res.json({ resumes });
    } catch (err) {
      console.error(err.message);
      res.status(500).send('Server error');
    }
  };

  
        //Search Resumes by UserID
        const getResumesByUserId = async (req, res, next) => {
            try {
              let { userId } = req.params;
              if (!userId.startsWith('userId=')) {
                userId = `:userId=${userId}`; // Add the "userId=" prefix if it's not already present
              }
              console.log(userId)
              const resumes = await Cv.find({ userId: userId });
              
              res.json({ resumes });
            } catch (err) {
              console.error(err.message);
              res.status(500).send('Server error');
            }
          };


module.exports= {
    loginRec,
    getCvs,
    searchResumes,
    getResumesByUserId
    
}